name: Deploy to EC2

on:
  push:
    branches: [devlop, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # 테스트를 위한 환경 설정이 추가됨
      - name: Setup Node.js # 테스트 실행을 위해 Node.js 필요
        uses: actions/setup-node@v2
        with:
          node-version: '20.15.0'

      - name: Install dependencies # 테스트에 필요한 의존성 설치
        run: npm install

      - name: Run unit tests # 테스트 실행
        run: npm run test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: kimdoyeon3/dev_intro:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 새 이미지 pull
            docker pull kimdoyeon3/dev_intro:${{ github.sha }}

            # 기존 컨테이너 중지 및 제거
            docker stop dev_intro_container || true
            docker rm dev_intro_container || true

            # 이전 이미지들 정리 (최신 2개만 남기고 삭제)
            docker images 'kimdoyeon3/dev_intro' --format '{{.ID}}' | head -n -2 | xargs -r docker rmi || true

            # 새 컨테이너 실행
            docker run -d -p 3000:3000 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }} \
            -e NODE_ENV=production \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }} \
            -e CLOUDFRONT_DOMAIN=${{ secrets.CLOUDFRONT_DOMAIN }} \
            --name dev_intro_container kimdoyeon3/dev_intro:${{ github.sha }}
