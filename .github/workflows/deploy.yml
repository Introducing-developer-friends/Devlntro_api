name: Deploy to EC2

on:
  push:
    branches: [devlop, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.15.0'

      - name: Install dependencies
        run: |
          npm install mysql2@2.3.3
          npm install

      - name: Setup MySQL for tests
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '8.0'
          mysql database: 'devintro_test'
          mysql user: 'test_user'
          mysql password: 'test_password'
          mysql root password: 'root'
          character set server: 'utf8mb4'
          collation server: 'utf8mb4_unicode_ci'

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h"127.0.0.1" --silent; do
            sleep 1
            echo "Waiting for MySQL..."
          done
      - name: Grant MySQL privileges
        run: |
          mysql -h127.0.0.1 -uroot -proot -e "
            CREATE USER IF NOT EXISTS 'test_user'@'%' IDENTIFIED WITH mysql_native_password BY 'test_password';
            GRANT ALL PRIVILEGES ON devintro_test.* TO 'test_user'@'%';
            FLUSH PRIVILEGES;
          "

      - name: Run all tests
        run: npm run test
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USERNAME: test_user
          DB_PASSWORD: 'test_password'
          DB_DATABASE: devintro_test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: kimdoyeon3/dev_intro:${{ github.sha }}

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'docker-compose.yml'
          target: '/home/ubuntu/dev-intro'

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: github_sha
          script: |
            mkdir -p /home/ubuntu/dev-intro
            cd /home/ubuntu/dev-intro

            docker-compose down

            export GITHUB_SHA=${{ github.sha }}
            docker-compose up -d

            docker images 'kimdoyeon3/dev_intro' --format '{{.ID}}' | tail -n +2 | xargs -r docker rmi

            docker system prune -f

            cat > .env << EOL
            DB_HOST=mysql
            DB_PORT=3306
            DB_USERNAME=devintro_user
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
            NODE_ENV=production
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
            CLOUDFRONT_DOMAIN=${{ secrets.CLOUDFRONT_DOMAIN }}
            EOL
